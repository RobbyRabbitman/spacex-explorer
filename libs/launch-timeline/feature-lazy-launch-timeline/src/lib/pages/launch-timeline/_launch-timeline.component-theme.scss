@use 'sass:map';
@use '@angular/material' as mat;

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);

  $primary-palette: map.get($color-config, 'primary');
  $foreground-palette: map.get($color-config, foreground);

  launch-timeline {
    .active-nav-item-header {
      color: mat.get-color-from-palette(
        $primary-palette,
        default-contrast
      ) !important;
      background: mat.get-color-from-palette($primary-palette, 600) !important;
      border-color: mat.get-color-from-palette($primary-palette, 600);
    }
    .nav-item-header {
      color: mat.get-color-from-palette(
        $foreground-palette,
        secondary-text
      ) !important;
      border-color: mat.get-color-from-palette($foreground-palette, divider);
      &:hover {
        color: mat.get-color-from-palette($primary-palette, 300) !important;
        border-color: mat.get-color-from-palette($primary-palette, 300);
      }
    }
    .active-nav-item {
      color: mat.get-color-from-palette($primary-palette, 600) !important;
      border-color: mat.get-color-from-palette($primary-palette, 600);
    }
    .nav-item {
      color: mat.get-color-from-palette(
        $foreground-palette,
        secondary-text
      ) !important;
      border-color: mat.get-color-from-palette($foreground-palette, divider);
      &:hover {
        color: mat.get-color-from-palette($primary-palette, 300) !important;
        border-color: mat.get-color-from-palette($primary-palette, 300);
      }
    }
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }
}
